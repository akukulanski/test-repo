language: python

stages:
- docker_img
- testing
- deployeo

jobs:
    include:
    - stage: docker_img
      before_install:
      - './login_docker.sh'
      - 'docker pull $DOCKER_USERNAME/test-reg' 
      script:
      - echo "---stage Docker, script---"
      - './login_docker.sh'
      - 'docker build -t docker_image -f .gci/dockerfile .'
      - 'docker run -it docker_image echo "stage docker: docker run"'
      after_success:
      - 'docker tag docker_image $DOCKER_USERNAME/test-reg'
      - 'docker push $DOCKER_USERNAME/test-reg'
    - stage: testing
      before_install:
      - './login_docker.sh'
      - 'docker pull $DOCKER_USERNAME/test-reg'
      script:
      - echo "Ac√° corre el test"
      - 'docker run -it $DOCKER_USERNAME/test-reg echo "stage test: docker run"'
      - './dockershell.sh $DOCKER_USERNAME/test-reg "make run"'
      - './dockershell.sh $DOCKER_USERNAME/test-reg "make test"'
      #- 'docker run -it $DOCKER_USERNAME/test-reg make run'
      #- 'docker run -it $DOCKER_USERNAME/test-reg make test'
    - stage: deployeo
      #before_install:
      #- './login_docker.sh'
      #- 'docker pull $DOCKER_USERNAME/test-reg'
      #script:
      #- './dockershell.sh zip saraza"
      

deploy:
  provider: releases
  api_key:
    secure: "hLMVFS2asWgoG7I1YRxK2lzxbGSDirmQC4I4cCMSM0uGYjqXUS4bJzoJgFzLmmG0F77M5F7Hrml72+wCMcY+uKEW45pSjgi17i/KFmiJz2t2akS8aCktqx1V5Ue9HqhE12JUiEd/HFUul4VW9i0133ERQg+dKdslrqzYFWZo3zHVECjT9LvktiSooldDkMggeK3qqJQ2CEy57cMZqDSBmcgphMyvoR5Ve71DUgP1LDGdZgch6wm0ytNMs7/ccFya7avR8SIK3MQQhAE6Z4/mz9oUHfCk7FKMnuUc4oNbko6iXR0pZsuzEI6/QpnEaZXQDsXspthfCsTtVWkomEMFm/PBoRur6gU46G6fNuhRW4bBdgkiVEzN/iqJLr48NrRcivbn1JlfLpDkJRLbRBzoCBc+lbTbxG8+ni8QR/HKrYu8Pzw62st3OYV/BhtQ0DgAOHVGj6dSGDSII9vdCwQNgtAKmmbVWyLYQef348C7cOgR6NeFlEC9klfWph0OmwDl+zwer16PimEhLA8ghMfiPZHs51RIqZ2Z03EcJ4wFruvtv/cXUHV2zngRBb3SEo0L12WAxDArgB+bd3rRATChdmo8anCcQ3XTh1SK+ODNuSDnrhvXku3wAE2h3yDoJYesxBP/LF+1dzHm34S3dJKOBpODTVIN4jocbPdxQQrrnsc="
  #file: 'release.zip'
  file: 'holatarolas'
  skip_cleanup: true
  on:
    branch: master
    tags: true
    #condition: $MY_ENV = super_awesome

#services:
#    - docker

#before_install:
#    - echo "---before install---"

#install:
#    - echo "---install---"

#before_script:
#    - echo "---before script---"

#before_cache:
#    - echo "---before cache---"

#before_deploy:
#    - echo "---before deploy---"

#deploy:
#    - echo "---deploy---"

#after_deploy:
#    - echo "---after deploy---"

#after_script:
#    - echo "---after script---"

#after_success:
#    - echo "---after success---"
#    - echo "Test Success - Branch($TRAVIS_BRANCH) Pull Request($TRAVIS_PULL_REQUEST) Tag($TRAVIS_TAG)"
#    - if [[ "$TRAVIS_BRANCH" == "master" ]]; then echo -e "---master!---"; fi

#after_failure:
#    - echo "---after failure---"
# https://travis-ci.community/t/how-to-skip-jobs-based-on-the-files-changed-in-a-subdirectory/2979/11
